import { TOPIC, RECORD_ACTION, PRESENCE_ACTION, RPC_ACTION } from '@deepstream/protobuf/dist/types/all'

export * from '@deepstream/protobuf/dist/types/all'
export * from '@deepstream/protobuf/dist/types/messages'

export const RESPONSE_TO_REQUEST: { [topic: number]: { [action: number]: RECORD_ACTION | PRESENCE_ACTION | RPC_ACTION } } = {
    [TOPIC.RECORD]: {
      [RECORD_ACTION.HEAD_RESPONSE]: RECORD_ACTION.HEAD,
      [RECORD_ACTION.READ_RESPONSE]: RECORD_ACTION.READ,
      [RECORD_ACTION.DELETE_SUCCESS]: RECORD_ACTION.DELETE,
    },
    [TOPIC.PRESENCE]: {
      [PRESENCE_ACTION.QUERY_RESPONSE]: PRESENCE_ACTION.QUERY,
      [PRESENCE_ACTION.QUERY_ALL_RESPONSE]: PRESENCE_ACTION.QUERY_ALL
    },
    [TOPIC.RPC]: {
      [RPC_ACTION.ACCEPT]: RPC_ACTION.REQUEST,
      [RPC_ACTION.ERROR]: RPC_ACTION.REQUEST
    },
    [TOPIC.EVENT]: {
    }
  }

export enum EVENT {
    UNSOLICITED_MESSAGE,
    IS_CLOSED,
    MAX_RECONNECTION_ATTEMPTS_REACHED,
    CONNECTION_ERROR,
    ACK_TIMEOUT,
    UNKNOWN_CORRELATION_ID,
    HEARTBEAT_TIMEOUT,
    LISTENER_EXISTS,
    NOT_LISTENING,
    RECORD_ALREADY_DESTROYED,
    RECORD_DELETE_TIMEOUT,

    CLIENT_OFFLINE = 'client offline',
    INVALID_AUTHENTICATION_DETAILS = 'INVALID_AUTHENTICATION_DETAILS',
    CONNECTION_LOST = 'connectionLost',
    CONNECTION_REESTABLISHED = 'connectionReestablished',
    EXIT_LIMBO = 'exitLimbo',
    CONNECTION_STATE_CHANGED = 'connectionStateChanged',
    CLIENT_DATA_CHANGED = 'clientDataChanged',
    REAUTHENTICATION_FAILURE = 'reauthenticationFailure',
    AUTHENTICATION_TIMEOUT = 'AUTHENTICATION_TIMEOUT',

    RECORD_ERROR = 'error',
    RECORD_READY = 'ready',
    RECORD_DELETED = 'delete',
    RECORD_DISCARDED = 'discard',
    RECORD_VERSION_EXISTS = 'versionExists',
    RECORD_HAS_PROVIDER_CHANGED = 'hasProviderChanged',
    RECORD_STATE_CHANGED = 'onRecordStateChanged',

    ENTRY_ADDED_EVENT = 'entry-added',
    ENTRY_REMOVED_EVENT = 'entry-removed',
    ENTRY_MOVED_EVENT = 'entry-moved'
}

export enum CONNECTION_STATE {
    CLOSING = 'CLOSING',
    CLOSED = 'CLOSED',
    INITIALISING = 'INITIALISING',
    AWAITING_CONNECTION = 'AWAITING_CONNECTION',
    CHALLENGING = 'CHALLENGING',
    AWAITING_AUTHENTICATION = 'AWAITING_AUTHENTICATION',
    AUTHENTICATING = 'AUTHENTICATING',
    OPEN = 'OPEN',
    ERROR = 'ERROR',
    RECONNECTING = 'RECONNECTING',
    REDIRECTING = 'REDIRECTING',
    CHALLENGE_DENIED = 'CHALLENGE_DENIED',
    TOO_MANY_AUTH_ATTEMPTS = 'TOO_MANY_AUTH_ATTEMPTS',
    AUTHENTICATION_TIMEOUT = 'AUTHENTICATION_TIMEOUT',
    PAUSING = 'PAUSING',
    OFFLINE = 'OFFLINE'
}
