export const ConnectionStates = {
    CLOSED: 'CLOSED',
    AWAITING_CONNECTION: 'AWAITING_CONNECTION',
    CHALLENGING: 'CHALLENGING',
    AWAITING_AUTHENTICATION: 'AWAITING_AUTHENTICATION',
    AUTHENTICATING: 'AUTHENTICATING',
    OPEN: 'OPEN',
    ERROR: 'ERROR',
    RECONNECTING: 'RECONNECTING'
};

export const MessageSeparator = String.fromCharCode(30); // ASCII Record Seperator 1E
export const MessagePartSeparator = String.fromCharCode(31); // ASCII Unit Separator 1F

export const Types = {
    STRING: 'S',
    OBJECT: 'O',
    NUMBER: 'N',
    NULL: 'L',
    TRUE: 'T',
    FALSE: 'F',
    UNDEFINED: 'U'
};

export const Topics = {
    CONNECTION: 'C',
    AUTH: 'A',
    ERROR: 'X',
    EVENT: 'E',
    RECORD: 'R',
    RPC: 'P',
    PRESENCE: 'U',
    PRIVATE: 'PRIVATE/'
};

export const Events = {
    CONNECTION_ERROR: 'connectionError',
    CONNECTION_STATE_CHANGED: 'connectionStateChanged',
    MAX_RECONNECTION_ATTEMPTS_REACHED: 'MAX_RECONNECTION_ATTEMPTS_REACHED',
    CONNECTION_AUTHENTICATION_TIMEOUT: 'CONNECTION_AUTHENTICATION_TIMEOUT',
    ACK_TIMEOUT: 'ACK_TIMEOUT',
    NO_RPC_PROVIDER: 'NO_RPC_PROVIDER',
    RESPONSE_TIMEOUT: 'RESPONSE_TIMEOUT',
    DELETE_TIMEOUT: 'DELETE_TIMEOUT',
    UNSOLICITED_MESSAGE: 'UNSOLICITED_MESSAGE',
    MESSAGE_DENIED: 'MESSAGE_DENIED',
    MESSAGE_PARSE_ERROR: 'MESSAGE_PARSE_ERROR',
    VERSION_EXISTS: 'VERSION_EXISTS',
    NOT_AUTHENTICATED: 'NOT_AUTHENTICATED',
    MESSAGE_PERMISSION_ERROR: 'MESSAGE_PERMISSION_ERROR',
    LISTENER_EXISTS: 'LISTENER_EXISTS',
    NOT_LISTENING: 'NOT_LISTENING',
    TOO_MANY_AUTH_ATTEMPTS: 'TOO_MANY_AUTH_ATTEMPTS',
    IS_CLOSED: 'IS_CLOSED',
    RECORD_NOT_FOUND: 'RECORD_NOT_FOUND',
    NOT_SUBSCRIBED: 'NOT_SUBSCRIBED'
};

export const Actions = {
    PING: 'PI',
    PONG: 'PO',
    ACK: 'A',
    REDIRECT: 'RED',
    CHALLENGE: 'CH',
    CHALLENGE_RESPONSE: 'CHR',
    READ: 'R',
    CREATE: 'C',
    UPDATE: 'U',
    PATCH: 'P',
    DELETE: 'D',
    SUBSCRIBE: 'S',
    UNSUBSCRIBE: 'US',
    HAS: 'H',
    SNAPSHOT: 'SN',
    INVOKE: 'I',
    SUBSCRIPTION_FOR_PATTERN_FOUND: 'SP',
    SUBSCRIPTION_FOR_PATTERN_REMOVED: 'SR',
    SUBSCRIPTION_HAS_PROVIDER: 'SH',
    LISTEN: 'L',
    UNLISTEN: 'UL',
    LISTEN_ACCEPT: 'LA',
    LISTEN_REJECT: 'LR',
    PROVIDER_UPDATE: 'PU',
    QUERY: 'Q',
    CREATEORREAD: 'CR',
    EVENT: 'EVT',
    ERROR: 'E',
    REQUEST: 'REQ',
    RESPONSE: 'RES',
    REJECTION: 'REJ',
    PRESENCE_JOIN: 'PNJ',
    PRESENCE_LEAVE: 'PNL',
    WRITE_ACKNOWLEDGEMENT: 'WA'
};

export const CallStates = {
    INITIAL: 'INITIAL',
    CONNECTING: 'CONNECTING',
    ESTABLISHED: 'ESTABLISHED',
    ACCEPTED: 'ACCEPTED',
    DECLINED: 'DECLINED',
    ENDED: 'ENDED',
    ERROR: 'ERROR'
};
